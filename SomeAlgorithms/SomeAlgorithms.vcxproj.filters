<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <Filter Include="Source Files">
      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>
    </Filter>
    <Filter Include="Header Files">
      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>
      <Extensions>h;hh;hpp;hxx;hm;inl;inc;ipp;xsd</Extensions>
    </Filter>
    <Filter Include="Resource Files">
      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="main.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="find_value_in_two_array.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="binary_tree.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="utils.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="rebuild_binary_tree.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="implement_queue_by_stack.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="find_min_in_rotate_arr.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="count_how_many_1_in_integer.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="implement_pow_function.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="print_1_to_n.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="remove_node_in_o_1.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="linked_list.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="find_index_node_cout_backwards.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="is_linked_list_circle.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="find_middle_node_in_linked_list.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="reverse_linked_list.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="is_tree_contains_another_tree.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="print_image_of_tree.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="print_metrics_clockwise.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="stack_with_min.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="is_pop_sequence_adapter_to_push_in_stack.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="print_bin_tree_from_top_to_down.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="is_sequence_bin_tree_postorder.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="find_tree_path_equals_sum.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="clone_complicated_linked_list.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="double_linked_list.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="convert_tree_to_double_list.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="print_all_arragement_of_string.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="print_all_combination_of_string.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="eight_queen.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="more_than_half_in_arr.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="smallest_k_num.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="maxinum_sub_arr.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="count_1_in_arr.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
    <ClCompile Include="change_arr_to_smallest_num.cpp">
      <Filter>Source Files</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="common.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="find_value_in_two_array.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="binary_tree.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="utils.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="rebuild_binary_tree.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="implement_queue_by_stack.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="find_min_in_rotate_arr.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="count_how_many_1_in_integer.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="implement_pow_function.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="print_1_to_n.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="remove_node_in_o_1.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="linked_list.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="find_index_node_cout_backwards.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="is_linked_list_circle.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="find_middle_node_in_linked_list.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="reverse_linked_list.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="is_tree_contains_another_tree.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="print_image_of_tree.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="print_metrics_clockwise.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="stack_with_min.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="is_pop_sequence_adapter_to_push_in_stack.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="print_bin_tree_from_top_to_down.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="is_sequence_bin_tree_postorder.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="find_tree_path_equals_sum.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="clone_complicated_linked_list.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="double_linked_list.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="print_all_arragement_of_string.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="print_all_combination_of_string.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="eight_queen.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="more_than_half_in_arr.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="smallest_k_num.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="maxinum_sub_arr.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="count_1_in_arr.h">
      <Filter>Header Files</Filter>
    </ClInclude>
    <ClInclude Include="change_arr_to_smallest_num.h">
      <Filter>Header Files</Filter>
    </ClInclude>
  </ItemGroup>
</Project>